package com.ehais.figoarticle.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import com.ehais.figoarticle.model.HaiGoods;
import com.ehais.figoarticle.model.HaiGoodsCate;
import com.ehais.figoarticle.model.HaiGoodsExample;
import com.ehais.figoarticle.model.HaiGoodsWithBLOBs;
import com.ehais.figoarticle.model.WebSiteCount;

public interface HaiGoodsMapper {
	
	@Select("select g.goods_id,g.cat_id,g.shop_price,c.calculate from hai_goods g left join hai_category c on g.cat_id = c.cat_id where ifnull(c.calculate,'') != '' ")
	@Results(value = {  
            @Result(property = "goodsId", column = "goods_id", javaType = Long.class, jdbcType = JdbcType.BIGINT),  
            @Result(property = "catId", column = "cat_id", javaType = Integer.class, jdbcType = JdbcType.INTEGER) ,
            @Result(property = "shopPrice", column = "shop_price", javaType = Integer.class, jdbcType = JdbcType.INTEGER) ,
            @Result(property = "calculate", column = "calculate", javaType = String.class, jdbcType = JdbcType.VARCHAR) 
            }) 
	List<HaiGoodsCate> listGoodsCate();
	
	@Update("update hai_goods set balance_price = #{balancePrice} where goods_id = #{goodsId}")
	int updateBalancePrice(@Param("goodsId") Long goodsId,
			@Param("balancePrice") Integer balancePrice);
	
	
	@Select("select count(*) as count,website_id from hai_goods GROUP BY website_id")
	@Results(value = {  
            @Result(id = true, property = "count", column = "count", javaType = Integer.class, jdbcType = JdbcType.INTEGER),  
            @Result(property = "websiteId", column = "website_id", javaType = Integer.class, jdbcType = JdbcType.INTEGER) })
	public List<WebSiteCount> groupWebSite();
	
	
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    long countByExample(HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int deleteByExample(HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int deleteByPrimaryKey(Long goodsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int insert(HaiGoodsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int insertSelective(HaiGoodsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    List<HaiGoodsWithBLOBs> selectByExampleWithBLOBs(HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    List<HaiGoods> selectByExample(HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    HaiGoodsWithBLOBs selectByPrimaryKey(Long goodsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int updateByExampleSelective(@Param("record") HaiGoodsWithBLOBs record, @Param("example") HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int updateByExampleWithBLOBs(@Param("record") HaiGoodsWithBLOBs record, @Param("example") HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int updateByExample(@Param("record") HaiGoods record, @Param("example") HaiGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int updateByPrimaryKeySelective(HaiGoodsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int updateByPrimaryKeyWithBLOBs(HaiGoodsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_goods
     *
     * @mbg.generated Fri Apr 14 21:52:06 CST 2017
     */
    int updateByPrimaryKey(HaiGoods record);
}