package com.ehais.school_weixin.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class HaiPayLogExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public HaiPayLogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andLog_idIsNull() {
			addCriterion("log_id is null");
			return (Criteria) this;
		}

		public Criteria andLog_idIsNotNull() {
			addCriterion("log_id is not null");
			return (Criteria) this;
		}

		public Criteria andLog_idEqualTo(Integer value) {
			addCriterion("log_id =", value, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idNotEqualTo(Integer value) {
			addCriterion("log_id <>", value, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idGreaterThan(Integer value) {
			addCriterion("log_id >", value, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("log_id >=", value, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idLessThan(Integer value) {
			addCriterion("log_id <", value, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idLessThanOrEqualTo(Integer value) {
			addCriterion("log_id <=", value, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idIn(List<Integer> values) {
			addCriterion("log_id in", values, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idNotIn(List<Integer> values) {
			addCriterion("log_id not in", values, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idBetween(Integer value1, Integer value2) {
			addCriterion("log_id between", value1, value2, "log_id");
			return (Criteria) this;
		}

		public Criteria andLog_idNotBetween(Integer value1, Integer value2) {
			addCriterion("log_id not between", value1, value2, "log_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idIsNull() {
			addCriterion("order_id is null");
			return (Criteria) this;
		}

		public Criteria andOrder_idIsNotNull() {
			addCriterion("order_id is not null");
			return (Criteria) this;
		}

		public Criteria andOrder_idEqualTo(Integer value) {
			addCriterion("order_id =", value, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idNotEqualTo(Integer value) {
			addCriterion("order_id <>", value, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idGreaterThan(Integer value) {
			addCriterion("order_id >", value, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("order_id >=", value, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idLessThan(Integer value) {
			addCriterion("order_id <", value, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idLessThanOrEqualTo(Integer value) {
			addCriterion("order_id <=", value, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idIn(List<Integer> values) {
			addCriterion("order_id in", values, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idNotIn(List<Integer> values) {
			addCriterion("order_id not in", values, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idBetween(Integer value1, Integer value2) {
			addCriterion("order_id between", value1, value2, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_idNotBetween(Integer value1, Integer value2) {
			addCriterion("order_id not between", value1, value2, "order_id");
			return (Criteria) this;
		}

		public Criteria andOrder_amountIsNull() {
			addCriterion("order_amount is null");
			return (Criteria) this;
		}

		public Criteria andOrder_amountIsNotNull() {
			addCriterion("order_amount is not null");
			return (Criteria) this;
		}

		public Criteria andOrder_amountEqualTo(BigDecimal value) {
			addCriterion("order_amount =", value, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountNotEqualTo(BigDecimal value) {
			addCriterion("order_amount <>", value, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountGreaterThan(BigDecimal value) {
			addCriterion("order_amount >", value, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("order_amount >=", value, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountLessThan(BigDecimal value) {
			addCriterion("order_amount <", value, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("order_amount <=", value, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountIn(List<BigDecimal> values) {
			addCriterion("order_amount in", values, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountNotIn(List<BigDecimal> values) {
			addCriterion("order_amount not in", values, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("order_amount between", value1, value2, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_amountNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("order_amount not between", value1, value2, "order_amount");
			return (Criteria) this;
		}

		public Criteria andOrder_typeIsNull() {
			addCriterion("order_type is null");
			return (Criteria) this;
		}

		public Criteria andOrder_typeIsNotNull() {
			addCriterion("order_type is not null");
			return (Criteria) this;
		}

		public Criteria andOrder_typeEqualTo(Boolean value) {
			addCriterion("order_type =", value, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeNotEqualTo(Boolean value) {
			addCriterion("order_type <>", value, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeGreaterThan(Boolean value) {
			addCriterion("order_type >", value, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeGreaterThanOrEqualTo(Boolean value) {
			addCriterion("order_type >=", value, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeLessThan(Boolean value) {
			addCriterion("order_type <", value, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeLessThanOrEqualTo(Boolean value) {
			addCriterion("order_type <=", value, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeIn(List<Boolean> values) {
			addCriterion("order_type in", values, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeNotIn(List<Boolean> values) {
			addCriterion("order_type not in", values, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeBetween(Boolean value1, Boolean value2) {
			addCriterion("order_type between", value1, value2, "order_type");
			return (Criteria) this;
		}

		public Criteria andOrder_typeNotBetween(Boolean value1, Boolean value2) {
			addCriterion("order_type not between", value1, value2, "order_type");
			return (Criteria) this;
		}

		public Criteria andIs_paidIsNull() {
			addCriterion("is_paid is null");
			return (Criteria) this;
		}

		public Criteria andIs_paidIsNotNull() {
			addCriterion("is_paid is not null");
			return (Criteria) this;
		}

		public Criteria andIs_paidEqualTo(Boolean value) {
			addCriterion("is_paid =", value, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidNotEqualTo(Boolean value) {
			addCriterion("is_paid <>", value, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidGreaterThan(Boolean value) {
			addCriterion("is_paid >", value, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_paid >=", value, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidLessThan(Boolean value) {
			addCriterion("is_paid <", value, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidLessThanOrEqualTo(Boolean value) {
			addCriterion("is_paid <=", value, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidIn(List<Boolean> values) {
			addCriterion("is_paid in", values, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidNotIn(List<Boolean> values) {
			addCriterion("is_paid not in", values, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidBetween(Boolean value1, Boolean value2) {
			addCriterion("is_paid between", value1, value2, "is_paid");
			return (Criteria) this;
		}

		public Criteria andIs_paidNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_paid not between", value1, value2, "is_paid");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table hai_pay_log
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hai_pay_log
     *
     * @mbg.generated do_not_delete_during_merge Mon Dec 05 15:49:07 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}