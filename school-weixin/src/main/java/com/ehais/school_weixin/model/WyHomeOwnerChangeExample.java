package com.ehais.school_weixin.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class WyHomeOwnerChangeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public WyHomeOwnerChangeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andChange_idIsNull() {
			addCriterion("change_id is null");
			return (Criteria) this;
		}

		public Criteria andChange_idIsNotNull() {
			addCriterion("change_id is not null");
			return (Criteria) this;
		}

		public Criteria andChange_idEqualTo(Integer value) {
			addCriterion("change_id =", value, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idNotEqualTo(Integer value) {
			addCriterion("change_id <>", value, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idGreaterThan(Integer value) {
			addCriterion("change_id >", value, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("change_id >=", value, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idLessThan(Integer value) {
			addCriterion("change_id <", value, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idLessThanOrEqualTo(Integer value) {
			addCriterion("change_id <=", value, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idIn(List<Integer> values) {
			addCriterion("change_id in", values, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idNotIn(List<Integer> values) {
			addCriterion("change_id not in", values, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idBetween(Integer value1, Integer value2) {
			addCriterion("change_id between", value1, value2, "change_id");
			return (Criteria) this;
		}

		public Criteria andChange_idNotBetween(Integer value1, Integer value2) {
			addCriterion("change_id not between", value1, value2, "change_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idIsNull() {
			addCriterion("previous_homeowner_id is null");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idIsNotNull() {
			addCriterion("previous_homeowner_id is not null");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idEqualTo(Integer value) {
			addCriterion("previous_homeowner_id =", value, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idNotEqualTo(Integer value) {
			addCriterion("previous_homeowner_id <>", value, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idGreaterThan(Integer value) {
			addCriterion("previous_homeowner_id >", value, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("previous_homeowner_id >=", value, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idLessThan(Integer value) {
			addCriterion("previous_homeowner_id <", value, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idLessThanOrEqualTo(Integer value) {
			addCriterion("previous_homeowner_id <=", value, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idIn(List<Integer> values) {
			addCriterion("previous_homeowner_id in", values, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idNotIn(List<Integer> values) {
			addCriterion("previous_homeowner_id not in", values, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idBetween(Integer value1, Integer value2) {
			addCriterion("previous_homeowner_id between", value1, value2, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_idNotBetween(Integer value1, Integer value2) {
			addCriterion("previous_homeowner_id not between", value1, value2, "previous_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameIsNull() {
			addCriterion("previous_homeowner_name is null");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameIsNotNull() {
			addCriterion("previous_homeowner_name is not null");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameEqualTo(String value) {
			addCriterion("previous_homeowner_name =", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameNotEqualTo(String value) {
			addCriterion("previous_homeowner_name <>", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameGreaterThan(String value) {
			addCriterion("previous_homeowner_name >", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameGreaterThanOrEqualTo(String value) {
			addCriterion("previous_homeowner_name >=", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameLessThan(String value) {
			addCriterion("previous_homeowner_name <", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameLessThanOrEqualTo(String value) {
			addCriterion("previous_homeowner_name <=", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameLike(String value) {
			addCriterion("previous_homeowner_name like", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameNotLike(String value) {
			addCriterion("previous_homeowner_name not like", value, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameIn(List<String> values) {
			addCriterion("previous_homeowner_name in", values, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameNotIn(List<String> values) {
			addCriterion("previous_homeowner_name not in", values, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameBetween(String value1, String value2) {
			addCriterion("previous_homeowner_name between", value1, value2, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andPrevious_homeowner_nameNotBetween(String value1, String value2) {
			addCriterion("previous_homeowner_name not between", value1, value2, "previous_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idIsNull() {
			addCriterion("now_homeowner_id is null");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idIsNotNull() {
			addCriterion("now_homeowner_id is not null");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idEqualTo(Integer value) {
			addCriterion("now_homeowner_id =", value, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idNotEqualTo(Integer value) {
			addCriterion("now_homeowner_id <>", value, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idGreaterThan(Integer value) {
			addCriterion("now_homeowner_id >", value, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("now_homeowner_id >=", value, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idLessThan(Integer value) {
			addCriterion("now_homeowner_id <", value, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idLessThanOrEqualTo(Integer value) {
			addCriterion("now_homeowner_id <=", value, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idIn(List<Integer> values) {
			addCriterion("now_homeowner_id in", values, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idNotIn(List<Integer> values) {
			addCriterion("now_homeowner_id not in", values, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idBetween(Integer value1, Integer value2) {
			addCriterion("now_homeowner_id between", value1, value2, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_idNotBetween(Integer value1, Integer value2) {
			addCriterion("now_homeowner_id not between", value1, value2, "now_homeowner_id");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameIsNull() {
			addCriterion("now_homeowner_name is null");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameIsNotNull() {
			addCriterion("now_homeowner_name is not null");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameEqualTo(String value) {
			addCriterion("now_homeowner_name =", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameNotEqualTo(String value) {
			addCriterion("now_homeowner_name <>", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameGreaterThan(String value) {
			addCriterion("now_homeowner_name >", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameGreaterThanOrEqualTo(String value) {
			addCriterion("now_homeowner_name >=", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameLessThan(String value) {
			addCriterion("now_homeowner_name <", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameLessThanOrEqualTo(String value) {
			addCriterion("now_homeowner_name <=", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameLike(String value) {
			addCriterion("now_homeowner_name like", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameNotLike(String value) {
			addCriterion("now_homeowner_name not like", value, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameIn(List<String> values) {
			addCriterion("now_homeowner_name in", values, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameNotIn(List<String> values) {
			addCriterion("now_homeowner_name not in", values, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameBetween(String value1, String value2) {
			addCriterion("now_homeowner_name between", value1, value2, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andNow_homeowner_nameNotBetween(String value1, String value2) {
			addCriterion("now_homeowner_name not between", value1, value2, "now_homeowner_name");
			return (Criteria) this;
		}

		public Criteria andCommunity_idIsNull() {
			addCriterion("community_id is null");
			return (Criteria) this;
		}

		public Criteria andCommunity_idIsNotNull() {
			addCriterion("community_id is not null");
			return (Criteria) this;
		}

		public Criteria andCommunity_idEqualTo(Integer value) {
			addCriterion("community_id =", value, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idNotEqualTo(Integer value) {
			addCriterion("community_id <>", value, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idGreaterThan(Integer value) {
			addCriterion("community_id >", value, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("community_id >=", value, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idLessThan(Integer value) {
			addCriterion("community_id <", value, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idLessThanOrEqualTo(Integer value) {
			addCriterion("community_id <=", value, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idIn(List<Integer> values) {
			addCriterion("community_id in", values, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idNotIn(List<Integer> values) {
			addCriterion("community_id not in", values, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idBetween(Integer value1, Integer value2) {
			addCriterion("community_id between", value1, value2, "community_id");
			return (Criteria) this;
		}

		public Criteria andCommunity_idNotBetween(Integer value1, Integer value2) {
			addCriterion("community_id not between", value1, value2, "community_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idIsNull() {
			addCriterion("building_id is null");
			return (Criteria) this;
		}

		public Criteria andBuilding_idIsNotNull() {
			addCriterion("building_id is not null");
			return (Criteria) this;
		}

		public Criteria andBuilding_idEqualTo(Integer value) {
			addCriterion("building_id =", value, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idNotEqualTo(Integer value) {
			addCriterion("building_id <>", value, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idGreaterThan(Integer value) {
			addCriterion("building_id >", value, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("building_id >=", value, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idLessThan(Integer value) {
			addCriterion("building_id <", value, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idLessThanOrEqualTo(Integer value) {
			addCriterion("building_id <=", value, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idIn(List<Integer> values) {
			addCriterion("building_id in", values, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idNotIn(List<Integer> values) {
			addCriterion("building_id not in", values, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idBetween(Integer value1, Integer value2) {
			addCriterion("building_id between", value1, value2, "building_id");
			return (Criteria) this;
		}

		public Criteria andBuilding_idNotBetween(Integer value1, Integer value2) {
			addCriterion("building_id not between", value1, value2, "building_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idIsNull() {
			addCriterion("house_id is null");
			return (Criteria) this;
		}

		public Criteria andHouse_idIsNotNull() {
			addCriterion("house_id is not null");
			return (Criteria) this;
		}

		public Criteria andHouse_idEqualTo(Integer value) {
			addCriterion("house_id =", value, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idNotEqualTo(Integer value) {
			addCriterion("house_id <>", value, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idGreaterThan(Integer value) {
			addCriterion("house_id >", value, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("house_id >=", value, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idLessThan(Integer value) {
			addCriterion("house_id <", value, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idLessThanOrEqualTo(Integer value) {
			addCriterion("house_id <=", value, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idIn(List<Integer> values) {
			addCriterion("house_id in", values, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idNotIn(List<Integer> values) {
			addCriterion("house_id not in", values, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idBetween(Integer value1, Integer value2) {
			addCriterion("house_id between", value1, value2, "house_id");
			return (Criteria) this;
		}

		public Criteria andHouse_idNotBetween(Integer value1, Integer value2) {
			addCriterion("house_id not between", value1, value2, "house_id");
			return (Criteria) this;
		}

		public Criteria andChange_dateIsNull() {
			addCriterion("change_date is null");
			return (Criteria) this;
		}

		public Criteria andChange_dateIsNotNull() {
			addCriterion("change_date is not null");
			return (Criteria) this;
		}

		public Criteria andChange_dateEqualTo(Date value) {
			addCriterionForJDBCDate("change_date =", value, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateNotEqualTo(Date value) {
			addCriterionForJDBCDate("change_date <>", value, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateGreaterThan(Date value) {
			addCriterionForJDBCDate("change_date >", value, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("change_date >=", value, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateLessThan(Date value) {
			addCriterionForJDBCDate("change_date <", value, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("change_date <=", value, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateIn(List<Date> values) {
			addCriterionForJDBCDate("change_date in", values, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateNotIn(List<Date> values) {
			addCriterionForJDBCDate("change_date not in", values, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("change_date between", value1, value2, "change_date");
			return (Criteria) this;
		}

		public Criteria andChange_dateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("change_date not between", value1, value2, "change_date");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table wy_home_owner_change
	 * @mbg.generated  Mon Dec 05 15:58:20 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wy_home_owner_change
     *
     * @mbg.generated do_not_delete_during_merge Mon Dec 05 15:49:07 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}