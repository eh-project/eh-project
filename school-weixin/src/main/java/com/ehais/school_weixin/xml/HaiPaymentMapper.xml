<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ehais.school_weixin.mapper.HaiPaymentMapper">
  <resultMap id="BaseResultMap" type="com.ehais.school_weixin.model.HaiPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    <id column="pay_id" jdbcType="TINYINT" property="pay_id" />
    <result column="pay_code" jdbcType="VARCHAR" property="pay_code" />
    <result column="pay_name" jdbcType="VARCHAR" property="pay_name" />
    <result column="pay_fee" jdbcType="VARCHAR" property="pay_fee" />
    <result column="pay_order" jdbcType="TINYINT" property="pay_order" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="is_default" jdbcType="BIT" property="is_default" />
    <result column="is_cod" jdbcType="BIT" property="is_cod" />
    <result column="is_online" jdbcType="BIT" property="is_online" />
    <result column="className" jdbcType="VARCHAR" property="className" />
    <result column="store_id" jdbcType="INTEGER" property="store_id" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ehais.school_weixin.model.HaiPaymentWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    <result column="pay_desc" jdbcType="LONGVARCHAR" property="pay_desc" />
    <result column="pay_config" jdbcType="LONGVARCHAR" property="pay_config" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    pay_id, pay_code, pay_name, pay_fee, pay_order, enabled, is_default, is_cod, is_online, 
    className, store_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    pay_desc, pay_config
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ehais.school_weixin.model.HaiPaymentExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hai_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ehais.school_weixin.model.HaiPaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hai_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hai_payment
    where pay_id = #{pay_id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    delete from hai_payment
    where pay_id = #{pay_id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ehais.school_weixin.model.HaiPaymentExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    delete from hai_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ehais.school_weixin.model.HaiPaymentWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    insert into hai_payment (pay_id, pay_code, pay_name, 
      pay_fee, pay_order, enabled, 
      is_default, is_cod, is_online, 
      className, store_id, pay_desc, 
      pay_config)
    values (#{pay_id,jdbcType=TINYINT}, #{pay_code,jdbcType=VARCHAR}, #{pay_name,jdbcType=VARCHAR}, 
      #{pay_fee,jdbcType=VARCHAR}, #{pay_order,jdbcType=TINYINT}, #{enabled,jdbcType=BIT}, 
      #{is_default,jdbcType=BIT}, #{is_cod,jdbcType=BIT}, #{is_online,jdbcType=BIT}, 
      #{className,jdbcType=VARCHAR}, #{store_id,jdbcType=INTEGER}, #{pay_desc,jdbcType=LONGVARCHAR}, 
      #{pay_config,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ehais.school_weixin.model.HaiPaymentWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    insert into hai_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pay_id != null">
        pay_id,
      </if>
      <if test="pay_code != null">
        pay_code,
      </if>
      <if test="pay_name != null">
        pay_name,
      </if>
      <if test="pay_fee != null">
        pay_fee,
      </if>
      <if test="pay_order != null">
        pay_order,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="is_default != null">
        is_default,
      </if>
      <if test="is_cod != null">
        is_cod,
      </if>
      <if test="is_online != null">
        is_online,
      </if>
      <if test="className != null">
        className,
      </if>
      <if test="store_id != null">
        store_id,
      </if>
      <if test="pay_desc != null">
        pay_desc,
      </if>
      <if test="pay_config != null">
        pay_config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pay_id != null">
        #{pay_id,jdbcType=TINYINT},
      </if>
      <if test="pay_code != null">
        #{pay_code,jdbcType=VARCHAR},
      </if>
      <if test="pay_name != null">
        #{pay_name,jdbcType=VARCHAR},
      </if>
      <if test="pay_fee != null">
        #{pay_fee,jdbcType=VARCHAR},
      </if>
      <if test="pay_order != null">
        #{pay_order,jdbcType=TINYINT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="is_default != null">
        #{is_default,jdbcType=BIT},
      </if>
      <if test="is_cod != null">
        #{is_cod,jdbcType=BIT},
      </if>
      <if test="is_online != null">
        #{is_online,jdbcType=BIT},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="store_id != null">
        #{store_id,jdbcType=INTEGER},
      </if>
      <if test="pay_desc != null">
        #{pay_desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="pay_config != null">
        #{pay_config,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ehais.school_weixin.model.HaiPaymentExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    select count(*) from hai_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    update hai_payment
    <set>
      <if test="record.pay_id != null">
        pay_id = #{record.pay_id,jdbcType=TINYINT},
      </if>
      <if test="record.pay_code != null">
        pay_code = #{record.pay_code,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_name != null">
        pay_name = #{record.pay_name,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_fee != null">
        pay_fee = #{record.pay_fee,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_order != null">
        pay_order = #{record.pay_order,jdbcType=TINYINT},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.is_default != null">
        is_default = #{record.is_default,jdbcType=BIT},
      </if>
      <if test="record.is_cod != null">
        is_cod = #{record.is_cod,jdbcType=BIT},
      </if>
      <if test="record.is_online != null">
        is_online = #{record.is_online,jdbcType=BIT},
      </if>
      <if test="record.className != null">
        className = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.store_id != null">
        store_id = #{record.store_id,jdbcType=INTEGER},
      </if>
      <if test="record.pay_desc != null">
        pay_desc = #{record.pay_desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.pay_config != null">
        pay_config = #{record.pay_config,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    update hai_payment
    set pay_id = #{record.pay_id,jdbcType=TINYINT},
      pay_code = #{record.pay_code,jdbcType=VARCHAR},
      pay_name = #{record.pay_name,jdbcType=VARCHAR},
      pay_fee = #{record.pay_fee,jdbcType=VARCHAR},
      pay_order = #{record.pay_order,jdbcType=TINYINT},
      enabled = #{record.enabled,jdbcType=BIT},
      is_default = #{record.is_default,jdbcType=BIT},
      is_cod = #{record.is_cod,jdbcType=BIT},
      is_online = #{record.is_online,jdbcType=BIT},
      className = #{record.className,jdbcType=VARCHAR},
      store_id = #{record.store_id,jdbcType=INTEGER},
      pay_desc = #{record.pay_desc,jdbcType=LONGVARCHAR},
      pay_config = #{record.pay_config,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    update hai_payment
    set pay_id = #{record.pay_id,jdbcType=TINYINT},
      pay_code = #{record.pay_code,jdbcType=VARCHAR},
      pay_name = #{record.pay_name,jdbcType=VARCHAR},
      pay_fee = #{record.pay_fee,jdbcType=VARCHAR},
      pay_order = #{record.pay_order,jdbcType=TINYINT},
      enabled = #{record.enabled,jdbcType=BIT},
      is_default = #{record.is_default,jdbcType=BIT},
      is_cod = #{record.is_cod,jdbcType=BIT},
      is_online = #{record.is_online,jdbcType=BIT},
      className = #{record.className,jdbcType=VARCHAR},
      store_id = #{record.store_id,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ehais.school_weixin.model.HaiPaymentWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    update hai_payment
    <set>
      <if test="pay_code != null">
        pay_code = #{pay_code,jdbcType=VARCHAR},
      </if>
      <if test="pay_name != null">
        pay_name = #{pay_name,jdbcType=VARCHAR},
      </if>
      <if test="pay_fee != null">
        pay_fee = #{pay_fee,jdbcType=VARCHAR},
      </if>
      <if test="pay_order != null">
        pay_order = #{pay_order,jdbcType=TINYINT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="is_default != null">
        is_default = #{is_default,jdbcType=BIT},
      </if>
      <if test="is_cod != null">
        is_cod = #{is_cod,jdbcType=BIT},
      </if>
      <if test="is_online != null">
        is_online = #{is_online,jdbcType=BIT},
      </if>
      <if test="className != null">
        className = #{className,jdbcType=VARCHAR},
      </if>
      <if test="store_id != null">
        store_id = #{store_id,jdbcType=INTEGER},
      </if>
      <if test="pay_desc != null">
        pay_desc = #{pay_desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="pay_config != null">
        pay_config = #{pay_config,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pay_id = #{pay_id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ehais.school_weixin.model.HaiPaymentWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    update hai_payment
    set pay_code = #{pay_code,jdbcType=VARCHAR},
      pay_name = #{pay_name,jdbcType=VARCHAR},
      pay_fee = #{pay_fee,jdbcType=VARCHAR},
      pay_order = #{pay_order,jdbcType=TINYINT},
      enabled = #{enabled,jdbcType=BIT},
      is_default = #{is_default,jdbcType=BIT},
      is_cod = #{is_cod,jdbcType=BIT},
      is_online = #{is_online,jdbcType=BIT},
      className = #{className,jdbcType=VARCHAR},
      store_id = #{store_id,jdbcType=INTEGER},
      pay_desc = #{pay_desc,jdbcType=LONGVARCHAR},
      pay_config = #{pay_config,jdbcType=LONGVARCHAR}
    where pay_id = #{pay_id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ehais.school_weixin.model.HaiPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:58:20 CST 2016.
    -->
    update hai_payment
    set pay_code = #{pay_code,jdbcType=VARCHAR},
      pay_name = #{pay_name,jdbcType=VARCHAR},
      pay_fee = #{pay_fee,jdbcType=VARCHAR},
      pay_order = #{pay_order,jdbcType=TINYINT},
      enabled = #{enabled,jdbcType=BIT},
      is_default = #{is_default,jdbcType=BIT},
      is_cod = #{is_cod,jdbcType=BIT},
      is_online = #{is_online,jdbcType=BIT},
      className = #{className,jdbcType=VARCHAR},
      store_id = #{store_id,jdbcType=INTEGER}
    where pay_id = #{pay_id,jdbcType=TINYINT}
  </update>
</mapper>